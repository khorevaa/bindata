#Использовать "../src"

#Использовать asserts

Перем юТест;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;
	
	ИменаТестов = Новый Массив;
	
	ИменаТестов.Добавить("ТестДолжен_ЗапаковкуДанныеВКласс");
	ИменаТестов.Добавить("ТестДолжен_ПровертьПолучениеДанныхБезЗапаковки");
	
	Возврат ИменаТестов;

КонецФункции

Процедура ТестДолжен_ЗапаковкуДанныеВКласс() Экспорт
	
	ВременныйКаталог = ВременныеФайлы.СоздатьКаталог();

	ПутьКЭталонномуФайлу = "./tests/fixtures/test.txt";
	ЭталонныйТекст = ТекстФайла(ПутьКЭталонномуФайлу);
	
	Запись = БинарныеДанные.ПодготовитьЗаписьКласса("test", ВременныйКаталог);
	Запись.ДобавитьФайл(ПутьКЭталонномуФайлу);
	Запись.ЗаписатьКласс();

	ПутьКфайлуКласса = ОбъединитьПути(ВременныйКаталог, "bindatatest.os");

	ПодключитьСценарий(ПутьКфайлуКласса, "bindatatest");

	ПутьКФайлу = БинарныеДанные.ПолучитьФайл("test.txt", "./tests/fixtures", "test");
	
	Утверждения.ПроверитьНеРавенство(ПутьКФайлу, ПутьКЭталонномуФайлу, "Результат не должен совпадать с ожиданиями.");

	ПроверяемыйФайл = ТекстФайла(ПутьКФайлу);
	
	Утверждения.ПроверитьРавенство(ПроверяемыйФайл, ЭталонныйТекст, "Результат должен совпадать с ожиданиями.");

	ВременныеФайлы.Удалить();

КонецПроцедуры

Процедура ТестДолжен_ПровертьПолучениеДанныхБезЗапаковки() Экспорт

	ПутьКЭталонномуФайлу = "./tests/fixtures/test.txt";
	ПутьКФайлу = БинарныеДанные.ПолучитьФайл("test.txt", "./tests/fixtures", "test2");

	Утверждения.ПроверитьРавенство(ПутьКЭталонномуФайлу, ПутьКФайлу, "Результат должен совпадать с ожиданиями.");


КонецПроцедуры

Функция ТекстФайла(ПутьКФайлуВерсии)
	
	Чтение = Новый ЧтениеТекста(ПутьКФайлуВерсии, КодировкаТекста.UTF8);
	РезультатЧтения  = Чтение.Прочитать();
	Чтение.Закрыть();

	Возврат РезультатЧтения;

КонецФункции

