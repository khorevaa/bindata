#Использовать logos

Перем НаборФайлов;
Перем ИмяКлассаФайла; 
Перем КаталогКлассов;
Перем ПутьКФайлуКласса;

Перем Лог;

Процедура ПриСозданииОбъекта(Знач ВходящееИмяКласса, Знач ПутьККаталогуКлассов)
	
	ИмяКлассаФайла = "bindata"+ВходящееИмяКласса;
	КаталогКлассов = ПутьККаталогуКлассов;

	ПутьКФайлуКласса = ОбъединитьПути(КаталогКлассов, ИмяКлассаФайла+".os"); 

	НаборФайлов = Новый Массив;

КонецПроцедуры

Процедура ДобавитьКаталог(Знач ПутьКФайлу, Знач КорневойКаталог = "") Экспорт
	
	Каталог = Новый Файл(ПутьКФайлу);

	Если НЕ Каталог.Существует() Тогда
		ВызватьИсключение СтрШаблон("Не удалось добавить каталог: %1  не найден", ПутьКФайлу); 
	КонецЕсли;
	
	ИмяКаталога = Каталог.Имя; 

	Если ПустаяСтрока(КорневойКаталог) Тогда
		
		КорневойКаталог = Каталог.ПолноеИмя;

	КонецЕсли;

	НайденныеФайлы = НайтиФайлы(ПутьКФайлу, ПолучитьМаскуВсеФайлы(), Истина );

	Для каждого НайденныйФайл Из НайденныеФайлы Цикл
		
		Если НайденныйФайл.ЭтоКаталог() Тогда
			ДобавитьКаталог(НайденныйФайл.ПолноеИмя, КорневойКаталог);
		Иначе
			ДобавитьФайл(НайденныйФайл.ПолноеИмя, КорневойКаталог);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Процедура ДобавитьФайл(Знач ПутьКФайлу, Знач КорневойКаталог = "") Экспорт
	
	Файл = Новый Файл(ПутьКФайлу);

	Если НЕ Файл.Существует() Тогда
		ВызватьИсключение СтрШаблон("Не удалось добавить файл: %1 файл не найден", ПутьКФайлу); 
	КонецЕсли;

	Если Файл.ЭтоКаталог() Тогда
		ВызватьИсключение СтрШаблон("Не удалось добавить файл: %1 файл не найден", ПутьКФайлу); 
	
		//ДобавитьКаталог(ПутьКФайлу);
	КонецЕсли;

	ИмяФайла = Файл.Имя;

	Если НЕ ПустаяСтрока(КорневойКаталог) Тогда
		ИмяФайла = СтрЗаменить(Файл.ПолноеИмя, КорневойКаталог + ПолучитьРазделительПути(), "");
	КонецЕсли;

	
	НаборФайлов.Добавить(НовыйФайлНабора(ИмяФайла, ПолучитBase64Строка(ПутьКФайлу)))

КонецПроцедуры

Функция ПолучитBase64Строка(ПутьКФайлу)

	ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ПутьКФайлу);
	Строка = Base64Строка(ДвоичныеДанныеФайла);
	Лог.Отладка("Строка Base64 <%1> для файла %2", Строка, ПутьКФайлу);
	Возврат Строка;

КонецФункции

Функция НовыйФайлНабора(ИмяФайла, XMLДанныеФайла)
	
	Возврат Новый Структура("ИмяФайла, XMLДанныеФайла", ИмяФайла, XMLДанныеФайла)

КонецФункции

Процедура ЗаписатьКласс() Экспорт
	
	ЗаписатьКлассРеализации(НаборФайлов);

КонецПроцедуры

Процедура ЗаписатьКлассРеализации(НаборФайлов)

	ШаблонТекст = "
	|// ФАЙЛ СОЗДАН АВТОМАТИЧЕСКИ
	|// КОРРЕКТИРОВКА В РУЧНУЮ НЕЖЕЛАТЕЛЬНА
	|Перем СоответствиеФайлов;
	| 
	|Функция ПолучитьСписокФайлов() Экспорт
	|	Возврат СоответствиеФайлов;
	|КонецФункции
	|
	|Функция ПолучитьДанные(Знач ИмяФайла) Экспорт
	|
	|	Возврат СоответствиеФайлов[ИмяФайла];
	|
	|КонецФункции
	|
	|Процедура Инициализация()
	|	СоответствиеФайлов = Новый Соответствие();
	|";

	Для каждого ФайлНабора Из НаборФайлов Цикл
		ШаблонТекст = ШаблонТекст + Символы.ПС 
		+ Символы.Таб + СтрШаблон("// >>> НАЧАЛО ФАЙЛ %1", ФайлНабора.ИмяФайла) + Символы.ПС 
		+ Символы.Таб + СтрокаКлассаДляФайла(ФайлНабора.ИмяФайла, ФайлНабора.XMLДанныеФайла) + Символы.ПС 
		+ Символы.Таб + "// <<< КОНЕЦ";
	КонецЦикла;

	ШаблонТекст = ШаблонТекст +"
	|	
	|КонецПроцедуры
	|
	|Инициализация();";

	ЗаписьТекста = Новый ЗаписьТекста(ПутьКФайлуКласса);
	ЗаписьТекста.ЗаписатьСтроку(ШаблонТекст);
	ЗаписьТекста.Закрыть();

КонецПроцедуры

Функция СтрокаКлассаДляФайла(ИмяФайла, ДвоичныеДанныеФайла)
	
	Возврат СтрШаблон("СоответствиеФайлов.Вставить(""%1"", ""%2"");", ИмяФайла, ДвоичныеДанныеФайла);

КонецФункции

НаборФайлов = Новый Массив;

Лог = Логирование.ПолучитьЛог("oscript.lib.bindata");
//Лог.УстановитьУровень(УровниЛога.Отладка);